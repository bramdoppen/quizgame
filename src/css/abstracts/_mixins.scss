// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }
}

/// Make a context based selector a little more friendly
/// @author Hugo Giraudel
/// @param {String} $context
@mixin when-inside($context) {
  #{$context} & {
    @content;
  }
}
@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin transitionAllEase($seconds) {
  -webkit-transition: all $seconds ease-in-out;
  -moz-transition: all $seconds ease-in-out;
  -o-transition: all $seconds ease-in-out;
  transition: all $seconds ease-in-out;
}

@mixin displayFlex($dir, $justify) {
  display:flex;
  flex-direction:$dir;
  justify-content:$justify;
}
@mixin allAbsolute() {
  position:absolute;
  top:0;
  left:0;
  right:0;
  bottom:0;
}

// Browser Prefixes - Which CSS prefixes should be used?
$webkit: true !default;
$moz: true !default;
$ms: true !default;
$o: true !default;


@mixin prefixed($property, $value) {
  @if $webkit == true {
    -webkit-#{$property}: #{$value};
  }

  @if $moz == true {
    -moz-#{$property}: #{$value};
  }

  @if $ms == true {
    -ms-#{$property}: #{$value};
  }

  @if $o == true {
    -o-#{$property}: #{$value};
  }

  #{$property}: #{$value};
}
